services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/todolist
      - SECRET_KEY=your_secret_key_change_in_production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todolist-network
    restart: on-failure

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=production
      - ORIGIN=http://localhost:3000
      - API_URL=http://backend:8000/api
    depends_on:
      - backend
    networks:
      - todolist-network
    restart: on-failure

  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=todolist
    ports:
      - "5432:5432"
    networks:
      - todolist-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  todolist-network:
    driver: bridge

volumes:
  postgres_data:
    name: todolist-postgres-data 